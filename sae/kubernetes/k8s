---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: database
  name: database
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: database

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: nats-server
  name: nats-server
spec:
  ports:
    - name: "4222"
      port: 4222
      targetPort: 4222
  selector:
    io.kompose.service: nats-server

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: web
  name: web
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
    - name: "443"
      port: 443
      targetPort: 443
  selector:
    io.kompose.service: web

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: database
  name: database
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: database
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-compose-internal-network: "true"
        io.kompose.service: database
    spec:
      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              value: toto
          image: mariadb
          name: sae-database
          ports:
            - containerPort: 3306
              hostPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init.sql
              name: database-claim0
            - mountPath: /docker-entrypoint.sh
              name: database-claim1
            - mountPath: /var/lib/mysql
              name: database-claim2
      restartPolicy: Always
      volumes:
        - name: database-claim0
          persistentVolumeClaim:
            claimName: database-claim0
        - name: database-claim1
          persistentVolumeClaim:
            claimName: database-claim1
        - name: database-claim2
          persistentVolumeClaim:
            claimName: database-claim2

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: database-claim0
  name: database-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: database-claim1
  name: database-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: database-claim2
  name: database-claim2
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: nats-get
  name: nats-get
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nats-get
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-compose-internal-network: "true"
        io.kompose.service: nats-get
    spec:
      containers:
        - image: get
          name: nats-get
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: nats-insert-a
  name: nats-insert-a
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nats-insert-a
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-compose-internal-network: "true"
        io.kompose.service: nats-insert-a
    spec:
      containers:
        - image: insert
          name: nats-insert-a
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: nats-insert-b
  name: nats-insert-b
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nats-insert-b
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-compose-internal-network: "true"
        io.kompose.service: nats-insert-b
    spec:
      containers:
        - image: insert
          name: nats-insert-b
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: nats-insert-c
  name: nats-insert-c
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nats-insert-c
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-compose-internal-network: "true"
        io.kompose.service: nats-insert-c
    spec:
      containers:
        - image: insert
          name: nats-insert-c
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: nats-server
  name: nats-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nats-server
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-compose-internal-network: "true"
        io.kompose.service: nats-server
    spec:
      containers:
        - image: nats
          name: sae-nats-server
          ports:
            - containerPort: 4222
              hostPort: 4222
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
    kompose.version: 1.32.0 (765fde254)
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert --file /home/sae/docker_compose/docker-compose.yml --out ./k8s
        kompose.version: 1.32.0 (765fde254)
      labels:
        io.kompose.network/docker-compose-internal-network: "true"
        io.kompose.service: web
    spec:
      containers:
        - args:
            - bash
            - -c
            - apachectl -DFOREGROUND
          image: django_sae
          name: django-sae
          ports:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              protocol: TCP
          stdin: true
          tty: true
      restartPolicy: Always

